<?php
declare(strict_types=1);

namespace App\Model;

use App\Constants\Services;
use League\Fractal\Resource\Collection;
use Phalcon\Mvc\Model;

/**
 * Messages
 *
 * @package App\Model
 * @autogenerated by Phalcon Developer Tools
 * @date 2019-01-27, 13:00:14
 * @method Users getReceiver
 * @method Users getAddresser
 * @method Collection getChildren
 * @method Messages getParentMessage
 */
class Messages extends Model
{

    /**
     *
     * @var integer
     * @Primary
     * @Identity
     * @Column(type="integer", length=11, nullable=false)
     */
    protected $id;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    protected $parent;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=false)
     */
    protected $sender;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=false)
     */
    protected $recipient;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=false)
     */
    protected $title;

    /**
     *
     * @var string
     * @Column(type="string", nullable=false)
     */
    protected $content;

    /**
     *
     * @var string
     * @Column(type="string", nullable=false)
     */
    protected $categories;

    /**
     *
     * @var string
     * @Column(type="string", nullable=false)
     */
    protected $sendMethod;

    /**
     *
     * @var string
     * @Column(type="string", nullable=false)
     */
    protected $status;

    /**
     *
     * @var string
     * @Column(type="string", nullable=false)
     */
    protected $supportStatus;

    /**
     *
     * @var string
     * @Column(type="string", nullable=false)
     */
    protected $sentDate;

    /**
     *
     * @var string
     * @Column(type="string", nullable=true)
     */
    protected $readDate;

    /**
     * Method to set the value of field id
     *
     * @param integer $id
     * @return $this
     */
    public function setId(int $id): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Method to set the value of field parent
     *
     * @param integer $parent
     * @return $this
     */
    public function setParent(int $parent): self
    {
        $this->parent = $parent;

        return $this;
    }

    /**
     * Method to set the value of field sender
     *
     * @param integer $sender
     * @return $this
     */
    public function setSender(int $sender): self
    {
        $this->sender = $sender;

        return $this;
    }

    /**
     * Method to set the value of field recipient
     *
     * @param integer $recipient
     * @return $this
     */
    public function setRecipient(int $recipient): self
    {
        $this->recipient = $recipient;

        return $this;
    }

    /**
     * Method to set the value of field title
     *
     * @param string $title
     * @return $this
     */
    public function setTitle(string $title): self
    {
        $this->title = $title;

        return $this;
    }

    /**
     * Method to set the value of field content
     *
     * @param string $content
     * @return $this
     */
    public function setContent(string $content): self
    {
        $this->content = $content;

        return $this;
    }

    /**
     * Method to set the value of field categories
     *
     * @param string $categories
     * @return $this
     */
    public function setCategories(string $categories): self
    {
        $this->categories = $categories;

        return $this;
    }

    /**
     * Method to set the value of field sendMethod
     *
     * @param string $sendMethod
     * @return $this
     */
    public function setSendMethod(string $sendMethod): self
    {
        $this->sendMethod = $sendMethod;

        return $this;
    }

    /**
     * Method to set the value of field status
     *
     * @param string $status
     * @return $this
     */
    public function setStatus(string $status): self
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Method to set the value of field supportStatus
     *
     * @param string $supportStatus
     * @return $this
     */
    public function setSupportStatus(string $supportStatus): self
    {
        $this->supportStatus = $supportStatus;

        return $this;
    }

    /**
     * Method to set the value of field sentDate
     *
     * @param string $sentDate
     * @return $this
     */
    public function setSentDate(string $sentDate): self
    {
        $this->sentDate = $sentDate;

        return $this;
    }

    /**
     * Method to set the value of field readDate
     *
     * @param string $readDate
     * @return $this
     */
    public function setReadDate(string $readDate): self
    {
        $this->readDate = $readDate;

        return $this;
    }

    /**
     * Returns the value of field id
     *
     * @return integer
     */
    public function getId(): ?int
    {
        return (int)$this->id;
    }

    /**
     * Returns the value of field parent
     *
     * @return integer
     */
    public function getParent(): ?int
    {
        return (int)$this->parent;
    }

    /**
     * Returns the value of field sender
     *
     * @return integer
     */
    public function getSender(): ?int
    {
        return (int)$this->sender;
    }

    /**
     * Returns the value of field recipient
     *
     * @return integer
     */
    public function getRecipient(): ?int
    {
        return (int)$this->recipient;
    }

    /**
     * Returns the value of field title
     *
     * @return string
     */
    public function getTitle(): ?string
    {
        return $this->title;
    }

    /**
     * Returns the value of field content
     *
     * @return string
     */
    public function getContent(): ?string
    {
        return $this->content;
    }

    /**
     * Returns the value of field categories
     *
     * @return string
     */
    public function getCategories(): string
    {
        return $this->categories;
    }

    /**
     * Returns the value of field sendMethod
     *
     * @return string
     */
    public function getSendMethod(): ?string
    {
        return $this->sendMethod;
    }

    /**
     * Returns the value of field status
     *
     * @return string
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Returns the value of field supportStatus
     *
     * @return string
     */
    public function getSupportStatus(): ?string
    {
        return $this->supportStatus;
    }

    /**
     * Returns the value of field sentDate
     *
     * @return string
     */
    public function getSentDate(): ?string
    {
        return $this->sentDate;
    }

    /**
     * Returns the value of field readDate
     *
     * @return string
     */
    public function getReadDate(): ?string
    {
        return $this->readDate;
    }

    /**
     * Initialize method for model.
     */
    public function initialize(): void
    {
        $this->setSchema($this->getDI()->get(Services::CONFIG)->database->dbname);
        $this->setSource('messages');
        $this->hasMany('id', __CLASS__, 'parent', ['alias' => 'Children']);
        $this->belongsTo('parent', __CLASS__, 'id', ['alias' => 'ParentMessage']);
        $this->belongsTo('recipient', Users::class, 'id', ['alias' => 'Receiver']);
        $this->belongsTo('sender', Users::class, 'id', ['alias' => 'Addresser']);
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource(): string
    {
        return 'messages';
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return Messages[]|Messages|\Phalcon\Mvc\Model\ResultSetInterface
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return Messages|\Phalcon\Mvc\Model\ResultInterface
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

    /**
     * @return $this
     */
    public function beforeCreate(): self
    {
        return $this;
    }

    /**
     * @return $this
     */
    public function beforeUpdate(): self
    {
        return $this;
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap(): array
    {
        return [
            'id' => 'id',
            'parent' => 'parent',
            'sender' => 'sender',
            'recipient' => 'recipient',
            'title' => 'title',
            'content' => 'content',
            'categories' => 'categories',
            'sendMethod' => 'sendMethod',
            'status' => 'status',
            'supportStatus' => 'supportStatus',
            'sentDate' => 'sentDate',
            'readDate' => 'readDate'
        ];
    }
}

<?php
declare(strict_types=1);

namespace App\Model;

use App\Constants\Services;
use League\Fractal\Resource\Collection;
use Phalcon\Mvc\Model;

/**
 * Candidates
 * 
 * @package App\Model
 * @autogenerated by Phalcon Developer Tools
 * @date 2020-09-29, 14:24:57
 * @method Collection getDeals
 * @method Collection getCompanies
 */
class Candidates extends Model
{

    /**
     *
     * @var integer
     * @Primary
     * @Identity
     * @Column(type="integer", length=11, nullable=false)
     */
    protected $id;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=false)
     */
    protected $company_id;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=false)
     */
    protected $position;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=false)
     */
    protected $professional_area;

    /**
     *
     * @var double
     * @Column(type="double", length=10, nullable=true)
     */
    protected $salary;

    /**
     *
     * @var string
     * @Column(type="string", nullable=false)
     */
    protected $currency;

    /**
     *
     * @var string
     * @Column(type="string", nullable=false)
     */
    protected $work_place;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    protected $key_skills;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=false)
     */
    protected $language;

    /**
     *
     * @var string
     * @Column(type="string", nullable=true)
     */
    protected $description;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    protected $location;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    protected $certification;

    /**
     *
     * @var string
     * @Column(type="string", nullable=false)
     */
    protected $creationDate;

    /**
     *
     * @var string
     * @Column(type="string", nullable=true)
     */
    protected $modifiedDate;

    /**
     * Method to set the value of field id
     *
     * @param integer $id
     * @return $this
     */
    public function setId(int $id): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Method to set the value of field company_id
     *
     * @param integer $company_id
     * @return $this
     */
    public function setCompanyId(int $company_id): self
    {
        $this->company_id = $company_id;

        return $this;
    }

    /**
     * Method to set the value of field position
     *
     * @param string $position
     * @return $this
     */
    public function setPosition(string $position): self
    {
        $this->position = $position;

        return $this;
    }

    /**
     * Method to set the value of field professional_area
     *
     * @param string $professional_area
     * @return $this
     */
    public function setProfessionalArea(string $professional_area): self
    {
        $this->professional_area = $professional_area;

        return $this;
    }

    /**
     * Method to set the value of field salary
     *
     * @param double $salary
     * @return $this
     */
    public function setSalary(float $salary): self
    {
        $this->salary = $salary;

        return $this;
    }

    /**
     * Method to set the value of field currency
     *
     * @param string $currency
     * @return $this
     */
    public function setCurrency(string $currency): self
    {
        $this->currency = $currency;

        return $this;
    }

    /**
     * Method to set the value of field work_place
     *
     * @param string $work_place
     * @return $this
     */
    public function setWorkPlace(string $work_place): self
    {
        $this->work_place = $work_place;

        return $this;
    }

    /**
     * Method to set the value of field key_skills
     *
     * @param string $key_skills
     * @return $this
     */
    public function setKeySkills(string $key_skills): self
    {
        $this->key_skills = $key_skills;

        return $this;
    }

    /**
     * Method to set the value of field language
     *
     * @param string $language
     * @return $this
     */
    public function setLanguage(string $language): self
    {
        $this->language = $language;

        return $this;
    }

    /**
     * Method to set the value of field description
     *
     * @param string $description
     * @return $this
     */
    public function setDescription(string $description): self
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Method to set the value of field location
     *
     * @param string $location
     * @return $this
     */
    public function setLocation(string $location): self
    {
        $this->location = $location;

        return $this;
    }

    /**
     * Method to set the value of field certification
     *
     * @param string $certification
     * @return $this
     */
    public function setCertification(string $certification): self
    {
        $this->certification = $certification;

        return $this;
    }

    /**
     * Method to set the value of field creationDate
     *
     * @param string $creationDate
     * @return $this
     */
    public function setCreationDate(string $creationDate): self
    {
        $this->creationDate = $creationDate;

        return $this;
    }

    /**
     * Method to set the value of field modifiedDate
     *
     * @param string $modifiedDate
     * @return $this
     */
    public function setModifiedDate(string $modifiedDate): self
    {
        $this->modifiedDate = $modifiedDate;

        return $this;
    }

    /**
     * Returns the value of field id
     *
     * @return integer|null
     */
    public function getId(): ?int
    {
        return (int)$this->id;
    }

    /**
     * Returns the value of field company_id
     *
     * @return integer|null
     */
    public function getCompanyId(): ?int
    {
        return (int)$this->company_id;
    }

    /**
     * Returns the value of field position
     *
     * @return string|null
     */
    public function getPosition(): ?string
    {
        return $this->position;
    }

    /**
     * Returns the value of field professional_area
     *
     * @return string|null
     */
    public function getProfessionalArea(): ?string
    {
        return $this->professional_area;
    }

    /**
     * Returns the value of field salary
     *
     * @return double|null
     */
    public function getSalary(): ?float
    {
        return (float)$this->salary;
    }

    /**
     * Returns the value of field currency
     *
     * @return string|null
     */
    public function getCurrency(): ?string
    {
        return $this->currency;
    }

    /**
     * Returns the value of field work_place
     *
     * @return string|null
     */
    public function getWorkPlace(): ?string
    {
        return $this->work_place;
    }

    /**
     * Returns the value of field key_skills
     *
     * @return string|null
     */
    public function getKeySkills(): ?string
    {
        return $this->key_skills;
    }

    /**
     * Returns the value of field language
     *
     * @return string|null
     */
    public function getLanguage(): ?string
    {
        return $this->language;
    }

    /**
     * Returns the value of field description
     *
     * @return string|null
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Returns the value of field location
     *
     * @return string|null
     */
    public function getLocation(): ?string
    {
        return $this->location;
    }

    /**
     * Returns the value of field certification
     *
     * @return string|null
     */
    public function getCertification(): ?string
    {
        return $this->certification;
    }

    /**
     * Returns the value of field creationDate
     *
     * @return string|null
     */
    public function getCreationDate(): ?string
    {
        return $this->creationDate;
    }

    /**
     * Returns the value of field modifiedDate
     *
     * @return string|null
     */
    public function getModifiedDate(): ?string
    {
        return $this->modifiedDate;
    }

    /**
     * Initialize method for model.
     */
    public function initialize(): void
    {
        $this->setSchema($this->getDI()->get(Services::CONFIG)->database->dbname);
        $this->setSource('candidates');
        $this->hasMany('id', Deals::class, 'candidate_id', ['alias' => 'Deals']);
        $this->belongsTo('company_id', Companies::class, 'id', ['alias' => 'Companies']);
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource(): string
    {
        return 'candidates';
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return Candidates[]|Candidates|\Phalcon\Mvc\Model\ResultSetInterface
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return Candidates|\Phalcon\Mvc\Model\ResultInterface
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap(): array
    {
        return [
            'id' => 'id',
            'company_id' => 'company_id',
            'position' => 'position',
            'professional_area' => 'professional_area',
            'salary' => 'salary',
            'currency' => 'currency',
            'work_place' => 'work_place',
            'key_skills' => 'key_skills',
            'language' => 'language',
            'description' => 'description',
            'location' => 'location',
            'certification' => 'certification',
            'creationDate' => 'creationDate',
            'modifiedDate' => 'modifiedDate'
        ];
    }

}

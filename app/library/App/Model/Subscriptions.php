<?php
declare(strict_types=1);

namespace App\Model;
use App\Constants\Services;
use League\Fractal\Resource\Collection;
use Phalcon\Mvc\Model;
use Phalcon\Mvc\Model\ResultInterface;
use Phalcon\Mvc\Model\ResultsetInterface;

/**
 * Subscriptions
 * 
 * @package App\Model
 * @autogenerated by Phalcon Developer Tools
 * @date 2020-09-29, 22:49:40
 * @method Collection getCompanySubscription
 * @method Collection getUserSubscription
 * @method Collection getCompanies
 * @method Collection getUsers
 */
class Subscriptions extends Model
{

    /**
     *
     * @var integer
     * @Primary
     * @Identity
     * @Column(type="integer", length=11, nullable=false)
     */
    protected $id;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=false)
     */
    protected $title;

    /**
     *
     * @var string
     * @Column(type="string", nullable=true)
     */
    protected $description;

    /**
     *
     * @var boolean
     */
    protected $is_company;

    /**
     *
     * @var boolean
     */
    protected $is_user;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    protected $amount;

    /**
     *
     * @var integer
     * @Column(type="integer", length=2, nullable=true)
     */
    protected $percentage;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    protected $amount_candidate;

    /**
     *
     * @var integer
     * @Column(type="integer", length=2, nullable=true)
     */
    protected $percentage_candidate;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    protected $amount_resume;

    /**
     *
     * @var integer
     * @Column(type="integer", length=2, nullable=true)
     */
    protected $percentage_resume;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    protected $amount_vacancy;

    /**
     *
     * @var integer
     * @Column(type="integer", length=2, nullable=true)
     */
    protected $percentage_vacancy;

    /**
     *
     * @var string
     * @Column(type="string", nullable=false)
     */
    protected $type;

    /**
     * Method to set the value of field id
     *
     * @param integer $id
     * @return $this
     */
    public function setId(int $id): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Method to set the value of field title
     *
     * @param string $title
     * @return $this
     */
    public function setTitle(string $title): self
    {
        $this->title = $title;

        return $this;
    }

    /**
     * Method to set the value of field description
     *
     * @param string $description
     * @return $this
     */
    public function setDescription(string $description): self
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Method to set the value of field company
     *
     * @param boolean $company
     * @return $this
     */
    public function setIsCompany(bool $company = true): Subscriptions
    {
        $this->is_company = $company;

        return $this;
    }

    /**
     * Method to set the value of field user
     *
     * @param boolean $user
     * @return $this
     */
    public function setIsUser(bool $user = true): Subscriptions
    {
        $this->is_user = $user;

        return $this;
    }

    /**
     * Method to set the value of field amount
     *
     * @param integer $amount
     * @return $this
     */
    public function setAmount(int $amount): self
    {
        $this->amount = $amount;

        return $this;
    }

    /**
     * Method to set the value of field percentage
     *
     * @param integer $percentage
     * @return $this
     */
    public function setPercentage(int $percentage): self
    {
        $this->percentage = $percentage;

        return $this;
    }

    /**
     * Method to set the value of field amount_candidate
     *
     * @param integer $amount_candidate
     * @return $this
     */
    public function setAmountCandidate(int $amount_candidate): self
    {
        $this->amount_candidate = $amount_candidate;

        return $this;
    }

    /**
     * Method to set the value of field percentage_candidate
     *
     * @param integer $percentage_candidate
     * @return $this
     */
    public function setPercentageCandidate(int $percentage_candidate): self
    {
        $this->percentage_candidate = $percentage_candidate;

        return $this;
    }

    /**
     * Method to set the value of field amount_resume
     *
     * @param integer $amount_resume
     * @return $this
     */
    public function setAmountResume(int $amount_resume): self
    {
        $this->amount_resume = $amount_resume;

        return $this;
    }

    /**
     * Method to set the value of field percentage_resume
     *
     * @param integer $percentage_resume
     * @return $this
     */
    public function setPercentageResume(int $percentage_resume): self
    {
        $this->percentage_resume = $percentage_resume;

        return $this;
    }

    /**
     * Method to set the value of field amount_vacancy
     *
     * @param integer $amount_vacancy
     * @return $this
     */
    public function setAmountVacancy(int $amount_vacancy): self
    {
        $this->amount_vacancy = $amount_vacancy;

        return $this;
    }

    /**
     * Method to set the value of field percentage_vacancy
     *
     * @param integer $percentage_vacancy
     * @return $this
     */
    public function setPercentageVacancy(int $percentage_vacancy): self
    {
        $this->percentage_vacancy = $percentage_vacancy;

        return $this;
    }

    /**
     * Method to set the value of field type
     *
     * @param string $type
     * @return $this
     */
    public function setType(string $type): self
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Returns the value of field id
     *
     * @return integer|null
     */
    public function getId(): ?int
    {
        return (int)$this->id;
    }

    /**
     * Returns the value of field title
     *
     * @return string|null
     */
    public function getTitle(): ?string
    {
        return $this->title;
    }

    /**
     * Returns the value of field description
     *
     * @return string|null
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Returns the value of field company
     *
     * @return integer|null
     */
    public function isCompany(): ?int
    {
        return (int) $this->is_company;
    }

    /**
     * Returns the value of field user
     *
     * @return integer|null
     */
    public function isUser(): ?int
    {
        return (int) $this->is_user;
    }

    /**
     * Returns the value of field company
     *
     * @return integer|null
     */
    public function getCompany(): ?int
    {
        return (int) $this->is_company;
    }

    /**
     * Returns the value of field user
     *
     * @return integer|null
     */
    public function getUser(): ?int
    {
        return (int) $this->is_user;
    }

    /**
     * Returns the value of field amount
     *
     * @return integer|null
     */
    public function getAmount(): ?int
    {
        return (int)$this->amount;
    }

    /**
     * Returns the value of field percentage
     *
     * @return integer|null
     */
    public function getPercentage(): ?int
    {
        return (int)$this->percentage;
    }

    /**
     * Returns the value of field amount_candidate
     *
     * @return integer|null
     */
    public function getAmountCandidate(): ?int
    {
        return (int)$this->amount_candidate;
    }

    /**
     * Returns the value of field percentage_candidate
     *
     * @return integer|null
     */
    public function getPercentageCandidate(): ?int
    {
        return (int)$this->percentage_candidate;
    }

    /**
     * Returns the value of field amount_resume
     *
     * @return integer|null
     */
    public function getAmountResume(): ?int
    {
        return (int)$this->amount_resume;
    }

    /**
     * Returns the value of field percentage_resume
     *
     * @return integer|null
     */
    public function getPercentageResume(): ?int
    {
        return (int)$this->percentage_resume;
    }

    /**
     * Returns the value of field amount_vacancy
     *
     * @return integer|null
     */
    public function getAmountVacancy(): ?int
    {
        return (int)$this->amount_vacancy;
    }

    /**
     * Returns the value of field percentage_vacancy
     *
     * @return integer|null
     */
    public function getPercentageVacancy(): ?int
    {
        return (int)$this->percentage_vacancy;
    }

    /**
     * Returns the value of field type
     *
     * @return string|null
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Initialize method for model.
     */
    public function initialize(): void
    {
        $this->setSchema($this->getDI()->get(Services::CONFIG)->database->dbname);
        $this->setSource('subscriptions');
        $this->hasMany('id', CompanySubscription::class, 'subscription_id', ['alias' => 'CompanySubscription']);
        $this->hasMany('id', UserSubscription::class, 'subscription_id', ['alias' => 'UserSubscription']);
        $this->hasManyToMany(
            'id',
            UserSubscription::class,
            'subscription_id',
            'user_id',
            Users::class,
            'id',
            [
                'alias' => 'Users'
            ]
        );
        $this->hasManyToMany(
            'id',
            CompanySubscription::class,
            'subscription_id',
            'company_id',
            Companies::class,
            'id',
            [
                'alias' => 'Companies'
            ]
        );
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource(): string
    {
        return 'subscriptions';
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return Subscriptions[]|Subscriptions|ResultSetInterface
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return Subscriptions|ResultInterface
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap(): array
    {
        return [
            'id' => 'id',
            'title' => 'title',
            'description' => 'description',
            'is_company' => 'is_company',
            'is_user' => 'is_user',
            'amount' => 'amount',
            'percentage' => 'percentage',
            'amount_candidate' => 'amount_candidate',
            'percentage_candidate' => 'percentage_candidate',
            'amount_resume' => 'amount_resume',
            'percentage_resume' => 'percentage_resume',
            'amount_vacancy' => 'amount_vacancy',
            'percentage_vacancy' => 'percentage_vacancy',
            'type' => 'type'
        ];
    }

}

<?php
declare(strict_types=1);

namespace App\Model;

use App\Constants\Services;
use Phalcon\Mvc\Model;

/**
 * Payments
 * 
 * @package App\Model
 * @autogenerated by Phalcon Developer Tools
 * @date 2020-09-29, 22:20:31
 *
 * @method Users getUsers
 * @method Companies getCompanies
 * @method UserSubscription getUserSubscriptions
 * @method CompanySubscription getCompanySubscriptions
 */
class Payments extends Model
{

    /**
     *
     * @var integer
     * @Primary
     * @Identity
     * @Column(type="integer", length=11, nullable=false)
     */
    protected $id;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    protected $title;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=false)
     */
    protected $description;

    /**
     *
     * @var double
     * @Column(type="double", length=10, nullable=false)
     */
    protected $amount;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    protected $account;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    protected $swift;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    protected $bank;

    /**
     *
     * @var string
     * @Column(type="string", nullable=true)
     */
    protected $date;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    protected $user_subscription;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    protected $company_subscription;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    protected $user_id;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    protected $company_id;

    /**
     *
     * @var string
     * @Column(type="string", nullable=false)
     */
    protected $currency;

    /**
     * Method to set the value of field id
     *
     * @param integer $id
     * @return $this
     */
    public function setId(int $id): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Method to set the value of field title
     *
     * @param string $title
     * @return $this
     */
    public function setTitle(string $title): self
    {
        $this->title = $title;

        return $this;
    }

    /**
     * Method to set the value of field description
     *
     * @param string $description
     * @return $this
     */
    public function setDescription(string $description): self
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Method to set the value of field amount
     *
     * @param double $amount
     * @return $this
     */
    public function setAmount(float $amount): self
    {
        $this->amount = $amount;

        return $this;
    }

    /**
     * Method to set the value of field account
     *
     * @param string $account
     * @return $this
     */
    public function setAccount(string $account): self
    {
        $this->account = $account;

        return $this;
    }

    /**
     * Method to set the value of field swift
     *
     * @param string $swift
     * @return $this
     */
    public function setSwift(string $swift): self
    {
        $this->swift = $swift;

        return $this;
    }

    /**
     * Method to set the value of field bank
     *
     * @param string $bank
     * @return $this
     */
    public function setBank(string $bank): self
    {
        $this->bank = $bank;

        return $this;
    }

    /**
     * Method to set the value of field date
     *
     * @param string $date
     * @return $this
     */
    public function setDate(string $date): self
    {
        $this->date = $date;

        return $this;
    }

    /**
     * Method to set the value of field user_subscription
     *
     * @param integer $user_subscription
     * @return $this
     */
    public function setUserSubscription(int $user_subscription): self
    {
        $this->user_subscription = $user_subscription;

        return $this;
    }

    /**
     * Method to set the value of field company_subscription
     *
     * @param integer $company_subscription
     * @return $this
     */
    public function setCompanySubscription(int $company_subscription): self
    {
        $this->company_subscription = $company_subscription;

        return $this;
    }

    /**
     * Method to set the value of field user_id
     *
     * @param integer $user_id
     * @return $this
     */
    public function setUserId(int $user_id): self
    {
        $this->user_id = $user_id;

        return $this;
    }

    /**
     * Method to set the value of field company_id
     *
     * @param integer $company_id
     * @return $this
     */
    public function setCompanyId(int $company_id): self
    {
        $this->company_id = $company_id;

        return $this;
    }

    /**
     * Method to set the value of field currency
     *
     * @param string $currency
     * @return $this
     */
    public function setCurrency(string $currency): self
    {
        $this->currency = $currency;

        return $this;
    }

    /**
     * Returns the value of field id
     *
     * @return integer|null
     */
    public function getId(): ?int
    {
        return (int)$this->id;
    }

    /**
     * Returns the value of field title
     *
     * @return string|null
     */
    public function getTitle(): ?string
    {
        return $this->title;
    }

    /**
     * Returns the value of field description
     *
     * @return string|null
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Returns the value of field amount
     *
     * @return double|null
     */
    public function getAmount(): ?float
    {
        return (float)$this->amount;
    }

    /**
     * Returns the value of field account
     *
     * @return string|null
     */
    public function getAccount(): ?string
    {
        return $this->account;
    }

    /**
     * Returns the value of field swift
     *
     * @return string|null
     */
    public function getSwift(): ?string
    {
        return $this->swift;
    }

    /**
     * Returns the value of field bank
     *
     * @return string|null
     */
    public function getBank(): ?string
    {
        return $this->bank;
    }

    /**
     * Returns the value of field date
     *
     * @return string|null
     */
    public function getDate(): ?string
    {
        return $this->date;
    }

    /**
     * Returns the value of field user_subscription
     *
     * @return integer|null
     */
    public function getUserSubscription(): ?int
    {
        return (int)$this->user_subscription;
    }

    /**
     * Returns the value of field company_subscription
     *
     * @return integer|null
     */
    public function getCompanySubscription(): ?int
    {
        return (int)$this->company_subscription;
    }

    /**
     * Returns the value of field user_id
     *
     * @return integer|null
     */
    public function getUserId(): ?int
    {
        return (int)$this->user_id;
    }

    /**
     * Returns the value of field company_id
     *
     * @return integer|null
     */
    public function getCompanyId(): ?int
    {
        return (int)$this->company_id;
    }

    /**
     * Returns the value of field currency
     *
     * @return string|null
     */
    public function getCurrency(): ?string
    {
        return $this->currency;
    }

    /**
     * Initialize method for model.
     */
    public function initialize(): void
    {
        $this->setSchema($this->getDI()->get(Services::CONFIG)->database->dbname);
        $this->setSource('payments');
        $this->belongsTo('user_subscription', UserSubscription::class, 'id', ['alias' => 'UserSubscriptions']);
        $this->belongsTo('company_id', Companies::class, 'id', ['alias' => 'Companies']);
        $this->belongsTo('user_id', Users::class, 'id', ['alias' => 'Users']);
        $this->belongsTo('company_subscription', CompanySubscription::class, 'id', ['alias' => 'CompanySubscriptions']);
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource(): string
    {
        return 'payments';
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return Payments[]|Payments|\Phalcon\Mvc\Model\ResultSetInterface
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return Payments|\Phalcon\Mvc\Model\ResultInterface
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap(): array
    {
        return [
            'id' => 'id',
            'title' => 'title',
            'description' => 'description',
            'amount' => 'amount',
            'account' => 'account',
            'swift' => 'swift',
            'bank' => 'bank',
            'date' => 'date',
            'user_subscription' => 'user_subscription',
            'company_subscription' => 'company_subscription',
            'user_id' => 'user_id',
            'company_id' => 'company_id',
            'currency' => 'currency'
        ];
    }

}

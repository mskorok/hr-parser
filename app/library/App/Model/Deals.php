<?php
declare(strict_types=1);

namespace App\Model;

use App\Constants\Services;
use Phalcon\Mvc\Model;

/**
 * Deals
 * 
 * @package App\Model
 * @autogenerated by Phalcon Developer Tools
 * @date 2020-09-29, 20:38:57
 * @method Candidates getCandidates
 * @method Companies getCompanies
 * @method Resumes getResumes
 * @method Vacancies getVacancies
 */
class Deals extends Model
{

    /**
     *
     * @var integer
     * @Primary
     * @Column(type="integer", length=11, nullable=false)
     */
    protected $id;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=false)
     */
    protected $company_id;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    protected $candidate_id;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    protected $resume_id;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    protected $vacancy_id;

    /**
     *
     * @var string
     * @Column(type="string", nullable=false)
     */
    protected $created;

    /**
     *
     * @var integer
     * @Column(type="integer", length=4, nullable=false)
     */
    protected $success;

    /**
     *
     * @var string
     * @Column(type="string", nullable=false)
     */
    protected $description;

    /**
     * Method to set the value of field id
     *
     * @param integer $id
     * @return $this
     */
    public function setId(int $id): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Method to set the value of field company_id
     *
     * @param integer $company_id
     * @return $this
     */
    public function setCompanyId(int $company_id): self
    {
        $this->company_id = $company_id;

        return $this;
    }

    /**
     * Method to set the value of field candidate_id
     *
     * @param integer $candidate_id
     * @return $this
     */
    public function setCandidateId(int $candidate_id): self
    {
        $this->candidate_id = $candidate_id;

        return $this;
    }

    /**
     * Method to set the value of field resume_id
     *
     * @param integer $resume_id
     * @return $this
     */
    public function setResumeId(int $resume_id): self
    {
        $this->resume_id = $resume_id;

        return $this;
    }

    /**
     * Method to set the value of field vacancy_id
     *
     * @param integer $vacancy_id
     * @return $this
     */
    public function setVacancyId(int $vacancy_id): self
    {
        $this->vacancy_id = $vacancy_id;

        return $this;
    }

    /**
     * Method to set the value of field created
     *
     * @param string $created
     * @return $this
     */
    public function setCreated(string $created): self
    {
        $this->created = $created;

        return $this;
    }

    /**
     * Method to set the value of field success
     *
     * @param integer $success
     * @return $this
     */
    public function setSuccess(int $success): self
    {
        $this->success = $success;

        return $this;
    }

    /**
     * Method to set the value of field description
     *
     * @param string $description
     * @return $this
     */
    public function setDescription(string $description): self
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Returns the value of field id
     *
     * @return integer|null
     */
    public function getId(): ?int
    {
        return (int)$this->id;
    }

    /**
     * Returns the value of field company_id
     *
     * @return integer|null
     */
    public function getCompanyId(): ?int
    {
        return (int)$this->company_id;
    }

    /**
     * Returns the value of field candidate_id
     *
     * @return integer|null
     */
    public function getCandidateId(): ?int
    {
        return (int)$this->candidate_id;
    }

    /**
     * Returns the value of field resume_id
     *
     * @return integer|null
     */
    public function getResumeId(): ?int
    {
        return (int)$this->resume_id;
    }

    /**
     * Returns the value of field vacancy_id
     *
     * @return integer|null
     */
    public function getVacancyId(): ?int
    {
        return (int)$this->vacancy_id;
    }

    /**
     * Returns the value of field created
     *
     * @return string|null
     */
    public function getCreated(): ?string
    {
        return $this->created;
    }

    /**
     * Returns the value of field success
     *
     * @return integer|null
     */
    public function getSuccess(): ?int
    {
        return (int)$this->success;
    }

    /**
     * Returns the value of field description
     *
     * @return string|null
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Initialize method for model.
     */
    public function initialize(): void
    {
        $this->setSchema($this->getDI()->get(Services::CONFIG)->database->dbname);
        $this->setSource('deals');
        $this->belongsTo('candidate_id', Candidates::class, 'id', ['alias' => 'Candidates']);
        $this->belongsTo('company_id', Companies::class, 'id', ['alias' => 'Companies']);
        $this->belongsTo('resume_id', Resumes::class, 'id', ['alias' => 'Resumes']);
        $this->belongsTo('vacancy_id', Vacancies::class, 'id', ['alias' => 'Vacancies']);
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource(): string
    {
        return 'deals';
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return Deals[]|Deals|\Phalcon\Mvc\Model\ResultSetInterface
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return Deals|\Phalcon\Mvc\Model\ResultInterface
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap(): array
    {
        return [
            'id' => 'id',
            'company_id' => 'company_id',
            'candidate_id' => 'candidate_id',
            'resume_id' => 'resume_id',
            'vacancy_id' => 'vacancy_id',
            'created' => 'created',
            'success' => 'success',
            'description' => 'description'
        ];
    }

}
